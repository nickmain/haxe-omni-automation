/*{
	"type": "action",
	"targets": ["omnigraffle"],
	"author": "Nick Main",
	"identifier": "isdfbhsd9890s8dfsjkdf",
	"version": "0.1",
	"description": "Hello world from Haxe",
	"label": "Haxe Hello",
	"paletteLabel": "HX Hello"
}*/

(() => {
    var exports = {};

    // Generated by Haxe 4.1.5
(function ($hx_exports, $global) { "use strict";
$hx_exports["samples"] = $hx_exports["samples"] || {};
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
Math.__name__ = true;
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
var epistem_omni_graffle_Action = function() {
};
epistem_omni_graffle_Action.__name__ = true;
epistem_omni_graffle_Action.prototype = {
	perform: function(selection,sender) {
	}
	,validate: function(selection,sender) {
		return true;
	}
};
var haxe_iterators_ArrayIterator = function(array) {
	this.current = 0;
	this.array = array;
};
haxe_iterators_ArrayIterator.__name__ = true;
haxe_iterators_ArrayIterator.prototype = {
	hasNext: function() {
		return this.current < this.array.length;
	}
	,next: function() {
		return this.array[this.current++];
	}
};
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(((o) instanceof Array)) {
			var str = "[";
			s += "\t";
			var _g = 0;
			var _g1 = o.length;
			while(_g < _g1) {
				var i = _g++;
				str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( _g ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var str = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		var k = null;
		for( k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str.length != 2) {
			str += ", \n";
		}
		str += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str += "\n" + s + "}";
		return str;
	case "string":
		return o;
	default:
		return String(o);
	}
};
var samples_HelloWorld = $hx_exports["samples"]["HelloWorld"] = function() {
	epistem_omni_graffle_Action.call(this);
};
samples_HelloWorld.__name__ = true;
samples_HelloWorld.__super__ = epistem_omni_graffle_Action;
samples_HelloWorld.prototype = $extend(epistem_omni_graffle_Action.prototype,{
	perform: function(selection,sender) {
		if(sender != null) {
			console.log("src/samples/HelloWorld.hx:18:","sender is menu item: " + Std.string(((sender) instanceof MenuItem)));
			console.log("src/samples/HelloWorld.hx:19:","sender is toolbar  : " + Std.string(((sender) instanceof ToolbarItem)));
		} else {
			console.log("src/samples/HelloWorld.hx:21:","No sender");
		}
		if(selection.solids.length > 0) {
			var _g = 0;
			var _g1 = selection.solids;
			while(_g < _g1.length) {
				var solid = _g1[_g];
				++_g;
				console.log("src/samples/HelloWorld.hx:26:","Selected --> " + solid.text);
			}
		} else {
			console.log("src/samples/HelloWorld.hx:29:","No solids selected");
		}
	}
	,validate: function(selection,sender) {
		return true;
	}
});
String.__name__ = true;
Array.__name__ = true;
js_Boot.__toStr = ({ }).toString;
})(typeof exports != "undefined" ? exports : typeof window != "undefined" ? window : typeof self != "undefined" ? self : this, {});

    
	const hxaction = new exports.samples.HelloWorld();
	const action = new PlugIn.Action(function(selection, sender){ hxaction.perform(selection, sender); });
	action.validate = function(selection, sender){ return hxaction.validate(selection, sender); };
	
	return action;
})();    
